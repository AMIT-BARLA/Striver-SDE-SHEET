import java.util.* ;
import java.io.*; 

public class Solution {
	
	public static long maxSubarraySum(int[] arr, int n) {
		// write your code here
        if ( arr.length == 0) {
            return 0;
        }
        long maxSum = 0;
        long currSum = 0;
        
        for(int i = 0 ; i <= arr.length - 1 ; i++ ){
            currSum += arr[i];
            if (currSum >= 0 ){
                maxSum = Math.max(currSum,maxSum);
            } else {
                currSum = 0;
            }
            
        }
        return maxSum;
	}

}
/*
Link - https://www.codingninjas.com/codestudio/problems/maximum-subarray-sum_630526?topList=striver-sde-sheet-problems&leftPanelTab=0

1. Add the sum to currSum until it is greater than 0 and also check for the max-sum.
2. when the currSum will be less than 0 then reset the value of currSum to '0'.

TC - O(N)
SC - O(1)
*/
